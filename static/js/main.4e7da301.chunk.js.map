{"version":3,"sources":["logo.svg","Class/Class.js","Node.js","Store/GraphContext.js","GraphController.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NodeObject","parent","cout","coord","heuristique","isWall","this","Coord","x","y","Block","Node","forwardRef","props","ref","useContext","GraphContext","graph","depart","setGraph","setDepart","setArrivee","arrivee","refs","block","useState","color","colorBg","setColorBg","setIsWall","setCout","setColor","useImperativeHandle","resetColor","onClick","e","console","log","current","style","border","width","height","backgroundColor","createContext","reset","setBlock","GraphProvider","initGraph","widthMax","window","innerWidth","graphTmp","xMax","line","yMax","nodeObject","push","useRef","contextValue","Provider","value","children","GraphController","compared2Nodes","node1","node2","sleep","ms","Promise","resolve","setTimeout","showPath","tab","a","aStarWiki","closedList","openList","departRef","arriveeRef","shift","curr","ret","reverse","calculatePath","neighboor","getNeighboorRef","forEach","v","includes","existWithLowerCost","d1","Math","abs","parseInt","d2","floor","distanceBetweenNode","sort","length","setBlockType","type","className","borderSpacing","map","rows","index","lineRef","row","Component","el","key","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4e7da301.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export class NodeObject {\n    NodeObject;\n    parent;\n    cout;\n    coord;\n    heuristique;\n    isWall;\n\n    constructor(NodeObject, parent, cout, coord, heuristique, isWall)\n    {\n        this.NodeObject = NodeObject;\n        this.parent = parent;\n        this.cout = cout;\n        this.coord = coord;\n        this.heuristique = heuristique;\n        this.isWall = isWall;\n    }\n}\n\n/**\n * class: contains coordonate of a case\n */\nexport class Coord {\n    x;\n    y;\n    \n    constructor(x, y) \n    {\n        this.x = x;\n        this.y = y;\n    }\n}\n\nexport const Block = {\n    DEPART:  \"depart\" , \n    ARRIVEE: \"arrivee\",\n    WALL:    \"wall\"\n}","import React, { useState, useContext, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport { GraphContext } from './Store/GraphContext';\nimport { Block, Coord } from './Class/Class';\n\n\nconst Node = forwardRef((props, ref) => {\n    const {graph, setGraph, depart, setDepart, arrivee, setArrivee, refs, block} = useContext(GraphContext);\n    const [coord, setCoord] = useState({x: props.x, y: props.y});\n    const [colorBg, setColorBg] = useState(props.color);\n    const [isWall, setIsWall] = useState(false);\n    const [cout, setCout] = useState(0);\n    const [heuristique, setHeuristique]Â = useState(0)\n\n    const {x, y} = coord;\n\n    /*useEffect(() => {\n        if (refs.current === [])\n            setColor(\"white\")\n    }, [refs])*/\n\n    const setColor = (color) => {\n        if (colorBg !== \"blue\" && colorBg !== \"yellow\")\n            setColorBg(color)\n    }\n\n    const setDepartArrivee = (e) => {\n        console.log(\"coord : \" + refs.current[x][y].coord)\n        refs.current[x][y].setColor(\"red\")\n        console.log(\"depart\", depart)\n        if (block === Block.DEPART)\n        {\n            setDepart({x: x, y:y});\n            setColorBg(\"blue\")\n            console.log(\"set Depart\");\n        }\n        else if (block === Block.ARRIVEE)\n        {\n            setArrivee({x: x, y:y});\n            setColorBg(\"yellow\");\n            console.log(\"set Arrivee\");\n        }\n        else if (block === Block.WALL) \n        {\n            setIsWall(true)\n            graph[coord.x][coord.y].isWall = true\n            setColorBg(\"black\");\n        }\n    }\n\n    useImperativeHandle(ref, () => ({\n\n        setColor,\n        \n        resetColor: () => {\n            setColorBg(\"white\");\n        },\n\n        setIsWall: (isWall) => {\n            setIsWall(isWall);\n        },\n\n        setCout: (cout) => {\n            setCout(cout);\n        }\n    \n    }));\n\n    return (\n        <td onClick={(e) => setDepartArrivee(e)} style={{ border: \"1px solid #333\", width: \"30px\", height: \"30px\", backgroundColor: colorBg}}>\n            {isWall ? \"\" : \"\"}\n        </td>\n    );\n})\n\nexport default Node;","import React, { createContext, useState, useRef } from 'react';\nimport Node from '../Node';\nimport { NodeObject, Coord, Block } from '../Class/Class'\n\nconst contextInit = {\n    graph: [],\n    setGraph: () => {},\n    refs: null,\n    depart: {},\n    setDepart: () => {},\n    arrivee: {},\n    setArrivee: () => {},\n    reset: () => {},\n    block: \"\",\n    setBlock: () => {}\n};\n\nexport const GraphContext = createContext(\n    contextInit\n);\n\nconst GraphProvider = (props) => {\n\n    const initGraph = () => {\n        let widthMax = window.innerWidth / 30\n        let graphTmp = [];\n        for (let xMax = 0; xMax < 20; xMax++ ) {\n            let line = []\n            for (let yMax = 0; yMax < widthMax; yMax++ ) {\n                const nodeObject = new NodeObject(Node, null, 0, new Coord(xMax, yMax), 0, false);\n                line.push(nodeObject)\n            }\n            graphTmp.push(line);\n        }\n        return graphTmp;\n\n    }\n\n    const [refs, setRefs] = useState(useRef([]));\n    const [graph, setGraph] = useState(initGraph);\n    const [depart, setDepart] = useState({});\n    const [arrivee, setArrivee] = useState({});\n    const [block, setBlock] = useState(\"\");\n\n    const reset = () => {\n        for (const line of refs.current) {\n            for(const ref of line) {\n                if (ref) {\n                    ref.resetColor()\n                    ref.setCout(0)\n                    ref.setIsWall(false)\n                }\n            }\n        }\n\n        refs.current = []\n        setGraph(initGraph);\n        setDepart({});\n        setArrivee({});\n    }\n\n    const contextValue = {\n        graph: graph,\n        setGraph: (e) => setGraph(e),\n        refs: refs,\n        depart: depart,\n        setDepart: (e) => setDepart(e),\n        arrivee: arrivee,\n        setArrivee: (e) => setArrivee(e),\n        reset: () => reset(),\n        block: block,\n        setBlock: (e) => setBlock(e)\n    };\n\n    return (\n        <div>\n            <GraphContext.Provider value = {contextValue}>\n                {props.children}\n            </GraphContext.Provider>\n        </div>\n    );\n}\n\nexport default GraphProvider;","import React, { useContext } from 'react';\nimport { GraphContext } from './Store/GraphContext';\nimport { Block } from './Class/Class';\n\nconst GraphController = () => {\n    const {graph, depart, arrivee, refs, reset, block, setBlock} = useContext(GraphContext);\n\n    /*\n    useEffect(() => {\n        console.log(\"changed graph\", graph);\n    }, [graph]);\n\n    useEffect(() => {\n        console.log(\"depart modifie\", depart)\n    }, [depart]);\n\n    useEffect(() => {\n        console.log(\"arrivee modifiÃ©\", arrivee)\n    }, [arrivee]);\n\n    useEffect(() => {\n        console.log(\"refs modifiÃ©\", refs)\n    }, [refs]); \n\n\n    const getObjectOfRef = (ref) => {\n        return graph[ref.coord.x][ref.coord.y];\n    }*/\n\n    const compared2Nodes = (node1, node2) => {\n        if (node1.heuristique < node2.heuristique ) {\n            return -1;\n        }\n        else if (node1.heuristique === node2.heuristique) {\n            return 0;\n        }\n        else return 1;\n    }\n\n    const distanceBetweenNode = (node1, node2) => {\n        const d1 = Math.abs(parseInt(node1.coord.x) - parseInt(node2.coord.x));\n        const d2 = Math.abs(parseInt(node1.coord.x) - parseInt(node2.coord.y));\n        return Math.floor(d1 + d2);\n    }\n\n    // refactor\n    const getNeighboorRef = (x, y) => {\n        let neighboor = [];\n        //top\n        if ((graph[x-1] && graph[x-1][y])) {\n            neighboor.push(graph[x-1][y]);\n        }\n        //bottom\n        if ((graph[x+1] && graph[x+1][y])) {\n            neighboor.push(graph[x+1][y]);\n        }\n        //left\n        if ((graph[x] && graph[x][y-1])) {\n            neighboor.push(graph[x][y-1]);\n        }\n        //right\n        if ((graph[x] && graph[x][y+1])) {\n            neighboor.push(graph[x][y+1]);\n        }\n        return neighboor;\n    }\n\n    // TODO : replace for by find\n    const existWithLowerCost = (v, tab) => {\n        if (tab.includes(v)) {\n            for (const value of tab) {\n                if (value.cout <= v.cout)\n                    return true;\n                return false;\n            }\n        }\n        return false;\n    }\n\n    const sleep = (ms) => {\n        return new Promise(resolve => setTimeout(resolve, ms))\n    }\n\n    const showPath = async (tab) => {\n        for (const ref of tab) {\n            await sleep(200)\n            refs.current[ref.coord.x][ref.coord.y].setColor(\"green\");\n        }\n    }\n\n    const calculatePath = (current) => {\n        let curr = current;\n        let ret = []\n\n        while (curr.parent) {\n            ret.push(curr);\n            curr = curr.parent;\n        }\n\n        showPath(ret.reverse());\n    }\n\n\n    // TODO: The sort didn't work openlist is a priority queue ? \n    const aStarWiki = () => {\n        let closedList = [];\n        let openList = [];\n        const departRef = graph[depart.x][depart.y];\n        const arriveeRef = graph[arrivee.x][arrivee.y];\n        openList.push(departRef);\n        while (openList.length > 0) {\n            const current = openList.shift();\n            if (current.coord.x === arriveeRef.coord.x && current.coord.y === arriveeRef.coord.y) {\n                calculatePath(current)\n                return;\n            }\n\n            getNeighboorRef(current.coord.x, current.coord.y).forEach((v) => {\n                if (closedList.includes(v) || existWithLowerCost(v, openList) || v.isWall) {\n                    return;\n                }    \n                else {\n                    v.cout = current.cout + 1;\n                    refs.current[v.coord.x][v.coord.y].setCout(current.cout + 1)\n                    v.heuristique = v.cout + distanceBetweenNode(v, arriveeRef);\n                    v.parent = current;\n                    openList.push(v);\n                    openList.sort(compared2Nodes)\n                }\n            });\n            closedList.push(current);\n        }\n        return [];\n    }\n\n\n    const setBlockType = (type) => {\n        setBlock(type);\n    }\n\n    return (\n        <div>\n            <div>\n                <button onClick={() => setBlockType(Block.DEPART)}>Depart</button>\n                <button onClick={() => setBlockType(Block.ARRIVEE)}>Arrivee</button>\n                <button onClick={() => setBlockType(Block.WALL)}>Wall</button>\n            </div>\n            <div>\n            <table className=\"Graph\" style={{borderSpacing: 0}}>\n                <tbody>\n                {\n                    refs.current = [],\n                    graph.map((rows, index) => {\n                        let x = index\n                        let lineRef = []\n                        let row = rows.map((Component, index) => {\n                            return <Component.NodeObject color=\"white\" ref={el => lineRef.push(el)} x={x} y={index} key={x + ':' + index} />\n                        })\n                        refs.current.push(lineRef)\n                        return <tr className=\"row\" key={index}>{row}</tr>\n                    })\n                    \n                }\n                </tbody>\n            </table>\n            </div>\n            <button onClick= {() => aStarWiki()}>Resolve</button>\n            <button onClick={() => reset()}>Reset</button>\n        </div>\n    );\n}\n\nexport default GraphController;","import React from 'react';\nimport logo from './logo.svg';\nimport GraphProvider from './Store/GraphContext';\nimport GraphController from './GraphController';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GraphProvider />\n      <GraphProvider>\n        <GraphController />\n      </GraphProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}